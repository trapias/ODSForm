<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="plSendMode.Text" xml:space="preserve">
    <value>Submit mode</value>
  </data>
  <data name="plEmail.Text" xml:space="preserve">
    <value>E-mail adress(es)</value>
  </data>
  <data name="cbEmail.Text" xml:space="preserve">
    <value>Send submission by e-mail</value>
  </data>
  <data name="cbDatabase.Text" xml:space="preserve">
    <value>Save submission in database</value>
  </data>
  <data name="plWidth.Text" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="plURL.Text" xml:space="preserve">
    <value>Redirect URL</value>
  </data>
  <data name="lblButtonsClass.Text" xml:space="preserve">
    <value>CSS class for buttons</value>
  </data>
  <data name="lblCaptcha.Text" xml:space="preserve">
    <value>Use Captcha?</value>
  </data>
  <data name="ControlTitle_settings.Text" xml:space="preserve">
    <value>ODS Form Settings</value>
  </data>
  <data name="lblCSSLabels.Text" xml:space="preserve">
    <value>CSS class for labels</value>
  </data>
  <data name="lblReqImg.Help" xml:space="preserve">
    <value>Image for required fields (will use orange asterisk if not set)</value>
  </data>
  <data name="lblReqImg.Text" xml:space="preserve">
    <value>Required Fields image</value>
  </data>
  <data name="lblCSSCaptcha.Text" xml:space="preserve">
    <value>CSS class for Captcha text</value>
  </data>
  <data name="lblModuleTitle.Text" xml:space="preserve">
    <value>Module title</value>
  </data>
  <data name="lblEnableLocalization.Help" xml:space="preserve">
    <value>Check this to enable form items localization</value>
  </data>
  <data name="lblEnableLocalization.Text" xml:space="preserve">
    <value>Enable form localization</value>
  </data>
  <data name="lblModuleTitle.Help" xml:space="preserve">
    <value>Translate module title</value>
  </data>
  <data name="AllowMailto.Text" xml:space="preserve">
    <value>Allow dynamic mailto recipient</value>
  </data>
  <data name="lblConfirmSubmission.Help" xml:space="preserve">
    <value>Set the type of confirmation after submission registration</value>
  </data>
  <data name="lblConfirmSubmission.Text" xml:space="preserve">
    <value>Submission Confirmation mode</value>
  </data>
  <data name="lblConfirmMessage.Help" xml:space="preserve">
    <value>Set your confirmation message</value>
  </data>
  <data name="lblConfirmMessage.Text" xml:space="preserve">
    <value>Confirmation message</value>
  </data>
  <data name="lblConfirmMessageTitle.Help" xml:space="preserve">
    <value>Set your confirmation message title</value>
  </data>
  <data name="lblConfirmMessageTitle.Text" xml:space="preserve">
    <value>Confirmation message title</value>
  </data>
  <data name="plClass.Help" xml:space="preserve">
    <value>Custom CSS class for main form div</value>
  </data>
  <data name="plClass.Text" xml:space="preserve">
    <value>Custom CSS class</value>
  </data>
  <data name="lblHideReset.Help" xml:space="preserve">
    <value>Hide the reset button (show only submit button)?</value>
  </data>
  <data name="lblHideReset.Text" xml:space="preserve">
    <value>Hide reset button</value>
  </data>
  <data name="lblValSum.Help" xml:space="preserve">
    <value>Display a validation summary?</value>
  </data>
  <data name="lblValSum.Text" xml:space="preserve">
    <value>Use validation summary?</value>
  </data>
  <data name="lblResetText.Help" xml:space="preserve">
    <value>Optionally set the localized text for reset button; leave blank for default</value>
  </data>
  <data name="lblResetText.Text" xml:space="preserve">
    <value>Reset button text</value>
  </data>
  <data name="lblSubmitText.Help" xml:space="preserve">
    <value>Optionally set the localized text for submit button; leave blank for default</value>
  </data>
  <data name="lblSubmitText.Text" xml:space="preserve">
    <value>Submit button text</value>
  </data>
  <data name="EmailSender.Help" xml:space="preserve">
    <value>Adress to use as email sender</value>
  </data>
  <data name="EmailSender.Text" xml:space="preserve">
    <value>Email sender </value>
  </data>
  <data name="CustomDomains.Help" xml:space="preserve">
    <value>List of custom domain names to validate mailto automation, semicolon (;) separated</value>
  </data>
  <data name="CustomDomains.Text" xml:space="preserve">
    <value>Custom domains</value>
  </data>
  <data name="lblWHURL.Text" xml:space="preserve">
    <value>WebHook URL</value>
  </data>
  <data name="PostToWebHook.Text" xml:space="preserve">
    <value>Post to WebHook</value>
  </data>
</root>